// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ESSEB2
Rcpp::List ESSEB2(int l, int n, int Q, int size, Eigen::VectorXd nodes, Eigen::VectorXd whts, Eigen::VectorXd lambda_Y_new, Eigen::VectorXd Lambda_Y_new, Eigen::VectorXd beta_X, Eigen::VectorXd delta_i, Eigen::VectorXd dgamma_Q, Eigen::VectorXd Lambda_b_nozero, Eigen::MatrixXd Y_eq_Yhat, Eigen::MatrixXd Y_geq_Yhat, Eigen::MatrixXd X);
RcppExport SEXP _transmdl_ESSEB2(SEXP lSEXP, SEXP nSEXP, SEXP QSEXP, SEXP sizeSEXP, SEXP nodesSEXP, SEXP whtsSEXP, SEXP lambda_Y_newSEXP, SEXP Lambda_Y_newSEXP, SEXP beta_XSEXP, SEXP delta_iSEXP, SEXP dgamma_QSEXP, SEXP Lambda_b_nozeroSEXP, SEXP Y_eq_YhatSEXP, SEXP Y_geq_YhatSEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type l(lSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type Q(QSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type whts(whtsSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type lambda_Y_new(lambda_Y_newSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type Lambda_Y_new(Lambda_Y_newSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta_X(beta_XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type delta_i(delta_iSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type dgamma_Q(dgamma_QSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type Lambda_b_nozero(Lambda_b_nozeroSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y_eq_Yhat(Y_eq_YhatSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y_geq_Yhat(Y_geq_YhatSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(ESSEB2(l, n, Q, size, nodes, whts, lambda_Y_new, Lambda_Y_new, beta_X, delta_i, dgamma_Q, Lambda_b_nozero, Y_eq_Yhat, Y_geq_Yhat, X));
    return rcpp_result_gen;
END_RCPP
}
// ddloglik_transmdl
Eigen::MatrixXd ddloglik_transmdl(int n, Eigen::VectorXd delta, Eigen::MatrixXd Z, Eigen::VectorXd beta, Eigen::VectorXd E);
RcppExport SEXP _transmdl_ddloglik_transmdl(SEXP nSEXP, SEXP deltaSEXP, SEXP ZSEXP, SEXP betaSEXP, SEXP ESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type E(ESEXP);
    rcpp_result_gen = Rcpp::wrap(ddloglik_transmdl(n, delta, Z, beta, E));
    return rcpp_result_gen;
END_RCPP
}
// shoot
Eigen::VectorXd shoot(Eigen::MatrixXd X, Eigen::VectorXd y, Eigen::VectorXd beta_ini_s, double lamb_s);
RcppExport SEXP _transmdl_shoot(SEXP XSEXP, SEXP ySEXP, SEXP beta_ini_sSEXP, SEXP lamb_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type y(ySEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta_ini_s(beta_ini_sSEXP);
    Rcpp::traits::input_parameter< double >::type lamb_s(lamb_sSEXP);
    rcpp_result_gen = Rcpp::wrap(shoot(X, y, beta_ini_s, lamb_s));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_transmdl_ESSEB2", (DL_FUNC) &_transmdl_ESSEB2, 15},
    {"_transmdl_ddloglik_transmdl", (DL_FUNC) &_transmdl_ddloglik_transmdl, 5},
    {"_transmdl_shoot", (DL_FUNC) &_transmdl_shoot, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_transmdl(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
